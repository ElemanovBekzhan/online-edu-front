// @ts-ignore
import React from 'react';
import { useParams, Link as RouterLink } from 'react-router-dom';
import {
    Container,
    Typography,
    List,
    ListItem,
    ListItemText,
    Button,
    Box,
    CircularProgress
} from '@mui/material';
import { useCourse } from '../hooks/useCourses';

export default function CourseDetail() {
    // –ë–µ—Ä—ë–º :id –∏–∑ URL
    const { id } = useParams<{ id: string }>();
    const courseId = id || ''

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫—É—Ä—Å—É
    const {
        data: course,
        isLoading,
        isError,
        error
    } = useCourse(courseId);

    // –ï—Å–ª–∏ –∫—É—Ä—Å –µ—â—ë –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
    if (isLoading) {
        return (
            <Box textAlign="center" mt={4}>
                <CircularProgress />
            </Box>
        );
    }

    // –ï—Å–ª–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    if (isError || !course) {
        return (
            <Typography color="error" textAlign="center" mt={4}>
                –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–∞: {error?.message || 'Unknown error'}
            </Typography>
        );
    }

    // –ö–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã
    return (
        <Container
            maxWidth={false}
            sx={{
                maxWidth: '1920px',
                mx: 'auto',
                py: 2,
                px: 2
            }}
        >
            <Box sx={{ mb: 3 }}>
                <Typography variant="h4">{course.title}</Typography>
                <Typography color="text.secondary" sx={{ mt: 1 }}>
                    {course.description}
                </Typography>
                <Typography variant="subtitle2" sx={{ mt: 1 }}>
                    –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {course.teacherUsername}
                </Typography>
                <Typography variant="subtitle2" sx={{ mt: 1 }}>
                    –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {new Date(course.createdAt).toLocaleDateString()}
                </Typography>
            </Box>

            {/* –ö–Ω–æ–ø–∫–∞ ‚Äú–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É‚Äù */}
            <Box sx={{ mb: 2 }}>
                <Button
                    component={RouterLink}
                    to="/courses"
                    variant="outlined"
                >
                    ‚Üê Back to Courses
                </Button>
            </Box>

            {/* –ó–¥–µ—Å—å (–ø–æ –∂–µ–ª–∞–Ω–∏—é) –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –ª–µ–∫—Ü–∏–π, —Å—Å—ã–ª–∫—É –Ω–∞ Assignments –∏ —Ç.–ø. */}
            <Typography variant="h5" gutterBottom>
                Lectures (–∑–∞–≥—Ä—É–∑–∫–∞ –ª–µ–∫—Ü–∏–π –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ö—É–∫e–º üëá)
            </Typography>
            {/* –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å useLectures, –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ –∑–¥–µ—Å—å:
          const { data: lectures, isLoading: lectLoad } = useLectures(courseId);
          –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ª–µ–∫—Ü–∏–π.
      */}
        </Container>
    );
}
